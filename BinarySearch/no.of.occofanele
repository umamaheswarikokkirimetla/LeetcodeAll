#User function Template for python3
class Solution:

	def count(self,nums, n, target):
		# code here
		def fo(nums,target):
            low,high=0,n-1
            f=-1
            while low<=high:
                mid=(low+high)//2
                if nums[mid]==target:
                    f=mid
                    high=mid-1
                elif nums[mid]<target:
                    low=mid+1
                else:
                    high=mid-1
            return f
        def lo(nums,target):
            low,high=0,n-1
            l=-1
            while low<=high:
                mid=(low+high)//2
                if nums[mid]==target:
                    l=mid
                    low=mid+1
                elif nums[mid]<target:
                    low=mid+1
                else:
                    high=mid-1
            return l
        first=fo(nums,target)
        if first==-1:
            return 0
        last=lo(nums,target)
        ans=(last-first)+1
        return ans


#{ 
 # Driver Code Starts
#Initial Template for Python 3




if __name__ == '__main__':
    tc = int(input())
    while tc > 0:
        n, x = list(map(int, input().strip().split()))
        arr = list(map(int, input().strip().split()))
        ob = Solution()
        ans = ob.count(arr, n, x)
        print(ans)
        tc -= 1

# } Driver Code Ends
